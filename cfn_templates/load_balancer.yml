AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This template creates an Application Load Balancer in PublicSubnetA and a target group
  in the scope of the 1 task 

Parameters: 
  VPCStackName:
    Type: String
    Description: The name of the VPC stack to get outputs from

Resources:
  # Create the Load Balancer security group 
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the Load Balancer
      VpcId: !ImportValue 
        Fn::Sub: "${VPCStackName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0 # Allow HTTP traffic from anywhere
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ALB-SG"

  # Create the Application Load Balancer (internet-facing)
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub "${AWS::StackName}-ALB"
      Scheme: internet-facing
      Subnets: !Split [ ",", !ImportValue !Sub '${VPCStackName}-PublicSubnetIds' ] # Use public subnets from VPC stack
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ALB" 

  # Create the Target Group
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "${AWS::StackName}-TG"
      Port: 80
      Protocol: HTTP
      VpcId: !ImportValue 
        Fn::Sub: "${VPCStackName}-VPCID"
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      TargetType: instance #targets an EC2 instance 
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-TG"  

  # Create the Listener for the Load Balancer to redirect HTTP traffic to the Target Group
  HTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

Outputs:
  LoadBalancerDNS:
    Description: DNS name of the Application Load Balancer
    Value: !GetAtt ApplicationLoadBalancer.DNSName
    Export:
      Name: !Sub "${AWS::StackName}-LoadBalancerDNS"  

  TargetGroupARN:
    Description: ARN of the Target Group
    Value: !Ref TargetGroup
    Export:
      Name: !Sub "${AWS::StackName}-TargetGroupARN" # this value will be used while creating a new instance

  LoadBalancerSecurityGroupID:
    Description: The ID of the Load Balancer's Security Group.
    Value: !GetAtt LoadBalancerSecurityGroup.GroupId
    Export:
      Name: !Sub '${AWS::StackName}-ALBSG-ID'