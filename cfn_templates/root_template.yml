AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This is the root orchestrator stack. It deploys the entire application
  by creating nested stacks for the VPC, Load Balancer, and Application tiers.
  Deploying this single template will build the entire environment.

Parameters:
  ProjectPrefix:
    Type: String
    Default: "stepan"
    Description: A prefix used to name the nested stacks and resources.
  TemplateBaseURL:
    Type: String
    Default: "https://s3.eu-west-1.amazonaws.com/stepan-cfn-templates-eu-west-1/cfn_templates/"
    Description: >
      The base URL of the S3 bucket where your templates are stored, including the trailing slash.
  InstanceType:
    Type: String
    Default: t3.micro
    Description: The EC2 instance type for the application servers.

Resources:
  # 1. Deploy the Networking Stack using vpc_template.yml
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      StackName: !Sub '${ProjectPrefix}-VPC'
      TemplateURL: !Sub '${TemplateBaseURL}vpc_template.yml'
      Parameters:
        ProjectPrefix: !Sub '${ProjectPrefix}'

  # 2. Deploy the Load Balancer Stack using load_balancer_template.yml
  LoadBalancerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      DependsOn: VPCStack
      StackName: !Sub '${ProjectPrefix}-LB'
      TemplateURL: !Sub '${TemplateBaseURL}load_balancer_template.yml'
      Parameters:
        ProjectPrefix: !Sub '${ProjectPrefix}'

  # 3. Deploy the Application Stack using task1_application_template.yml
  ApplicationStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      DependsOn:
        - VPCStack
        - LoadBalancerStack
      StackName: !Sub '${ProjectPrefix}-test1-app'
      TemplateURL: !Sub '${TemplateBaseURL}task1_application_template.yml'
      Parameters:
        ProjectPrefix: !Sub '${ProjectPrefix}'
        LoadBalancerStackName: !Sub '${ProjectPrefix}-LB'
        InstanceType: !Ref InstanceType
